% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_ebrel_spatial_data.R
\name{generate_habitats_rast}
\alias{generate_habitats_rast}
\title{Generate autocorrelated habitat rasters with availability mask}
\usage{
generate_habitats_rast(dim1 = 50, dim2 = 50, n_h = 4, unavail_hab_prop = 0.25)
}
\arguments{
\item{dim1}{Integer. Number of rows in the grid. Default \code{50}.}

\item{dim2}{Integer. Number of columns in the grid. Default \code{50}.}

\item{n_h}{Integer. Number of habitat layers to simulate. Default \code{4}.}

\item{unavail_hab_prop}{Numeric in \eqn{[0,1)}. Proportion of cells treated as
unavailable (e.g., urban) and masked out of \code{HP}/\code{E}/\code{HO}.
Default \code{0.25}.}
}
\value{
A list with three \code{SpatRaster} stacks (each with \code{n_h} layers):
\describe{
\item{\code{HP}}{Continuous habitat potentials, names \code{hp1..hpN}.}
\item{\code{E}}{Binary existing habitat (one-hot), names \code{E1..EN}.}
\item{\code{HO}}{Binary habitat opportunities after masking, names \code{HO1..HON}.}
}
}
\description{
Creates a set of \code{SpatRaster} layers representing (i) continuous habitat
suitability surfaces (\code{HP}), (ii) a binary one-hot existing habitat stack
(\code{E}), and (iii) a binary habitat opportunity stack (\code{HO}) after
masking out an "urban/unavailable" fraction of the landscape.
}
\details{
Internally, unconditional Gaussian fields are simulated with \pkg{gstat},
rescaled to \eqn{[0,1]}, and the lowest \code{unavail_hab_prop} quantile is
treated as unavailable. \code{E} is built by one-hot encoding the
layer-wise \code{which.max(HP)} and multiplying by a probabilistic
conversion mask; the function retries that conversion until every habitat
layer in \code{E} has at least one positive cell.

This function is stochastic. For reproducibility, set Râ€™s seed (e.g., \code{set.seed(1)})
before calling. The internal retry loop ensures \emph{every} \code{E} layer has at least
one positive cell.
}
\examples{
\dontrun{
set.seed(1)
sim <- generate_habitats_rast(dim1 = 30, dim2 = 40, n_h = 3, unavail_hab_prop = 0.2)
sim$HP; sim$E; sim$HO
terra::global(sim$E, "sum", na.rm = TRUE)  # cells per habitat
}

}
